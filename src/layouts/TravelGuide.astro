---
import "../styles/prose.css";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Time from "../components/Time.astro";
import Footer from "../components/Footer.astro";
import Squiggle from "../components/Squiggle.astro";
import TableOfContents, {
  asTree,
  Header as TocHeader,
} from "../components/toc/TableOfContents.astro";
import { TreeNode } from "../components/toc/tree-node";
import Image from "../components/Image.astro";

export interface Props {
  content: {
    title: string;
    description?: string;
    pubDate?: string;
    updatedDate?: string;
    cover?: string;
    notionLink?: string;
  };
  headings?: readonly TocHeader[];
  headerTree?: readonly TreeNode[];
}

const {
  content: { title, description = "", cover, pubDate, updatedDate, notionLink },
  headings,
  headerTree,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead
      title={`${title} travel guide from Tiger x Daphne`}
      description={description}
      image="/social.jpg"
    />
  </head>

  <body>
    <Header />

    <article class="mx-auto px-4">
      <header class="pb-2 mb-4">
        <h1
          class="text-5xl inline-block relative font-ultracondensed text-shadow-sm shadow-black/30"
        >
          {title}
          <Squiggle
            autoAnimate
            class="absolute -top-10 -left-12 max-w-xs text-orange-500 -z-1"
          />
        </h1>
        <div class="py-2 border-b border-zinc-900/40"></div>
        <div
          class="text-sm py-2 px-1.5 text-right text-shadow shadow-[#d3d1c4]"
        >
          <Time pubDate={pubDate} updatedDate={updatedDate} />
          {
            notionLink && (
              <a
                class="block underline decoration-zinc-900/0 hover:decoration-zinc-900/40"
                href={notionLink}
              >
                Open in Notion{" "}
                <img
                  class="inline w-4 h-4 align-top"
                  alt=""
                  src="/images/notion_logo.svg"
                />
              </a>
            )
          }
        </div>
      </header>
      <TableOfContents tree={headings ? asTree(headings) : headerTree} />
      {
        cover && (
          <Image
            class="cover mb-8 bg-black/30 object-cover overflow-hidden shadow shadow-black/30"
            widths={[800, 1600, null]}
            src={cover}
          />
        )
      }
      <div class="prose">
        <slot />
      </div>
    </article>
    <Footer />
    <style>
      .cover {
        grid-area: cover;
        margin-left: -1rem;
        margin-right: -1rem;
        width: calc(100% + 2rem);
        max-width: initial;
        height: 30vh;
      }

      @media (min-width: 768px) {
        article {
          display: grid;
          column-gap: 2rem;
          grid-template:
            ".   header" auto
            "toc cover" min-content
            "toc content" auto
            / 300px fit-content(48rem);
        }

        header {
          grid-area: header;
        }
        .prose {
          grid-area: content;
        }
        .cover {
          margin-left: 0;
          width: calc(100% + 1rem);
        }
      }

      @media (min-width: 1084px) {
        .cover {
          margin-right: 0;
          width: 100%;
        }
      }

      @media (min-width: 1280px) {
        article {
          grid-template:
            ".   header  cover" auto
            "toc content cover" auto
            / 300px fit-content(48rem) auto;
        }
        .cover {
          height: auto;
        }
      }
    </style>
  </body>
</html>
