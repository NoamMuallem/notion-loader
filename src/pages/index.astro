---
import { getCollection } from "astro:content";
import HomeExtra from "../components/HomeExtra.astro";
import HomeHero from "../components/HomeHero.astro";
import HomeRow, { type Card } from "../components/HomeRow.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { fileToUrl } from "../lib/notion";
import { destinationSlug } from "../content/destinations";

const pages = await getCollection("destinations");

const featuredPage = pages.find((page) => page.data.Featured);
const pagesWithImages = pages.filter(
  (page) => page.data.cover && page.id !== featuredPage?.id
);
const pagesWithoutImages = pages.filter(
  (page) => !page.data.cover && page.id !== featuredPage?.id
);

const cards: Card[][] = [
  [
    { width: 1, page: pagesWithImages[0] },
    { width: 2, page: pagesWithImages[1] },
  ],
  [
    { width: 2, page: pagesWithImages[2] },
    { width: 1, page: pagesWithImages[3] },
  ],
  pagesWithImages.slice(4).map((page) => ({ width: 1, page })),
];
---

<BaseLayout
  title="Tiger x Daphne's Travels"
  description="Our collection of travel notes straight out of our notebook!"
  themeColor="#bdbabf"
>
  <header class="m-3 mb-0 flex">
    <h1 class="font-headings flex-1 font-normal text-xl font-extracondensed">
      Tiger x Daphne's <span class="text-orange-700 font-semibold">Travels</span
      >
    </h1>
  </header>
  <aside class="m-3 mt-0 mb-5 md:mb-20 text-sm">
    Our collection of travel notes straight out of our notebook!
  </aside>
  <main class="grid overflow-hidden">
    {
      featuredPage && (
        <HomeHero
          href={`/travel-guides/${destinationSlug(featuredPage)}`}
          src={fileToUrl(featuredPage.data.cover)!}
        >
          {featuredPage.data.Name}
        </HomeHero>
      )
    }

    <section class="home-cards grid">
      {cards.map((row, i) => <HomeRow index={i} row={row} />)}
    </section>

    <HomeExtra row={pagesWithoutImages} />
  </main>
</BaseLayout>

<style>
  main {
    margin: 8px;
    grid-template: 40vw 1fr / 1fr;
  }
  .home-cards {
    --card-height: min(35vw, 300px);
    grid-template-columns:
      repeat(3, calc(var(--card-height) * 0.75))
      auto;
    column-gap: min(2vw, 32px);
    grid-auto-rows: 1px var(--card-height);
  }
  @media (min-width: 768px) {
    main {
      grid-template: 1fr / 40vw 1fr;
    }
    .home-cards {
      --card-height: min(20vw, 300px);
      column-gap: min(2vw, 2rem);
    }
  }
</style>
